{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nexport default function useGitHub() {\n  _s();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  function getUser(_x) {\n    return _getUser.apply(this, arguments);\n  }\n\n  function _getUser() {\n    _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userSearch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return axios.get(\"https://api.github.com/users/\".concat(userSearch)).then(function (res) {\n                return console.log(res.data);\n              })[\"finally\"](function () {\n                return setIsLoading(false);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getUser.apply(this, arguments);\n  }\n\n  return {\n    state: {\n      isLoading: isLoading\n    },\n    actions: {\n      getUser: getUser\n    }\n  };\n}\n\n_s(useGitHub, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");","map":{"version":3,"sources":["C:/Users/imachado/Desktop/next-boilerplate/src/core/hooks/useGitHub/index.tsx"],"names":["useState","axios","useGitHub","isLoading","setIsLoading","getUser","userSearch","get","then","res","console","log","data","state","actions"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AASA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACAF,QAAQ,CAAU,KAAV,CADR;AAAA,MAC3BG,SAD2B;AAAA,MAChBC,YADgB;;AAAA,WAGnBC,OAHmB;AAAA;AAAA;;AAAA;AAAA,wEAGlC,iBAAuBC,UAAvB;AAAA;AAAA;AAAA;AAAA;AACEF,cAAAA,YAAY,CAAC,IAAD,CAAZ;AADF;AAAA,qBAEQH,KAAK,CACRM,GADG,wCACiCD,UADjC,GAEHE,IAFG,CAEE,UAACC,GAAD;AAAA,uBAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAAT;AAAA,eAFF,aAGK;AAAA,uBAAMR,YAAY,CAAC,KAAD,CAAlB;AAAA,eAHL,CAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHkC;AAAA;AAAA;;AAWlC,SAAO;AACLS,IAAAA,KAAK,EAAE;AACLV,MAAAA,SAAS,EAATA;AADK,KADF;AAILW,IAAAA,OAAO,EAAE;AACPT,MAAAA,OAAO,EAAPA;AADO;AAJJ,GAAP;AAQD;;GAnBuBH,S","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Router from 'next/router';\r\nimport getConfig from 'next/config';\r\nimport {\r\n  TransactionByTidRequest,\r\n  TransactionByTidResponse,\r\n  PermittedTransactionResponse,\r\n} from './interface';\r\n\r\nexport default function useGitHub() {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  async function getUser(userSearch: string): Promise<void> {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(`https://api.github.com/users/${userSearch}`)\r\n      .then((res) => console.log(res.data))\r\n      .finally(() => setIsLoading(false));\r\n  }\r\n\r\n  return {\r\n    state: {\r\n      isLoading,\r\n    },\r\n    actions: {\r\n      getUser,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}