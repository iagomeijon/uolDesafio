{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imachado\\\\Desktop\\\\Develop\\\\projects\\\\uolDesafio\\\\src\\\\components\\\\UserCard\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// MARK: Libs\nimport { useState } from 'react'; // MARK: Hooks\n\nimport useStrings from '@core/hooks/useStrings'; // MARK: components\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RepositoryList from '../RepositoryList'; // MARK: Helprs\n\nimport { onStarredClicked, onReposClicked } from './helpers'; // MARK: Interfaces\n\n// MARK: Styles\nimport styles from './styles.module.scss';\n\nconst UserCard = props => {\n  const {\n    user,\n    repositories,\n    isLoading,\n    handleRepos,\n    handleStarred\n  } = props;\n  const {\n    strings\n  } = useStrings();\n  const {\n    userCard\n  } = strings.components;\n  const {\n    0: listTitle,\n    1: setListTitle\n  } = useState('');\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.container__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: user.avatar_url,\n    alt: \"Avatar\",\n    className: styles.container__image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    className: styles.container__loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, user.login)), __jsx(\"div\", {\n    className: styles.container__row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles.container__infoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, `${userCard.subTitle1} ${user.public_repos}`), __jsx(\"p\", {\n    className: styles.container__infoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, `${userCard.subTitle2} ${user.followers}`)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: styles.container__button,\n    onClick: () => onReposClicked(handleRepos, setListTitle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, userCard.button1), __jsx(\"button\", {\n    type: \"button\",\n    className: styles.container__button,\n    onClick: () => onStarredClicked(handleStarred, setListTitle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, userCard.button2))), __jsx(\"div\", {\n    className: styles.container__listBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, isLoading ? __jsx(CircularProgress, {\n    size: 35,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }) : repositories && __jsx(RepositoryList, {\n    list: repositories,\n    listTitle: listTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default UserCard;","map":{"version":3,"sources":["C:/Users/imachado/Desktop/Develop/projects/uolDesafio/src/components/UserCard/index.tsx"],"names":["useState","useStrings","CircularProgress","RepositoryList","onStarredClicked","onReposClicked","styles","UserCard","props","user","repositories","isLoading","handleRepos","handleStarred","strings","userCard","components","listTitle","setListTitle","container","container__row","avatar_url","container__image","container__loginText","login","container__infoText","subTitle1","public_repos","subTitle2","followers","container__button","button1","button2","container__listBox"],"mappings":"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","sourcesContent":["// MARK: Libs\r\nimport { useState } from 'react';\r\n// MARK: Hooks\r\nimport useStrings from '@core/hooks/useStrings';\r\n// MARK: components\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport RepositoryList from '../RepositoryList';\r\n// MARK: Helprs\r\nimport { onStarredClicked, onReposClicked } from './helpers';\r\n// MARK: Interfaces\r\nimport { UserCardProps } from './interface';\r\n// MARK: Styles\r\nimport styles from './styles.module.scss';\r\n\r\nconst UserCard = (props: UserCardProps) => {\r\n  const { user, repositories, isLoading, handleRepos, handleStarred } = props;\r\n  const { strings } = useStrings();\r\n  const { userCard } = strings.components;\r\n  const [listTitle, setListTitle] = useState<string>('');\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.container__row}>\r\n        <img\r\n          src={user.avatar_url}\r\n          alt=\"Avatar\"\r\n          className={styles.container__image}\r\n        />\r\n        <p className={styles.container__loginText}>{user.login}</p>\r\n      </div>\r\n      <div className={styles.container__row}>\r\n        <div>\r\n          <p className={styles.container__infoText}>\r\n            {`${userCard.subTitle1} ${user.public_repos}`}\r\n          </p>\r\n          <p className={styles.container__infoText}>\r\n            {`${userCard.subTitle2} ${user.followers}`}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.container__button}\r\n            onClick={() => onReposClicked(handleRepos, setListTitle)}\r\n          >\r\n            {userCard.button1}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.container__button}\r\n            onClick={() => onStarredClicked(handleStarred, setListTitle)}\r\n          >\r\n            {userCard.button2}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.container__listBox}>\r\n        {isLoading ? (\r\n          <CircularProgress size={35} />\r\n        ) : (\r\n          repositories && (\r\n            <RepositoryList list={repositories} listTitle={listTitle} />\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n"]},"metadata":{},"sourceType":"module"}