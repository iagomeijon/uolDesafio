{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imachado\\\\Desktop\\\\Develop\\\\projects\\\\uolDesafio\\\\src\\\\components\\\\RepositoryList\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// MARK: Hooks\nimport useStrings from '@core/hooks/useStrings'; // MARK: Interfaces\n\n// MARK: Styles\nimport styles from './styles.module.scss';\n\nvar RepositoryList = function RepositoryList(props) {\n  _s();\n\n  var list = props.list,\n      listTitle = props.listTitle;\n\n  var _useStrings = useStrings(),\n      strings = _useStrings.strings;\n\n  var repositoryList = strings.components.repositoryList;\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: styles.container__title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, listTitle), list.length > 0 ? __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, list.map(function (_repository, index) {\n    return __jsx(\"a\", {\n      key: \"repository\".concat(index),\n      href: _repository.html_url,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, _repository.name));\n  })) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, repositoryList.notFounded, \" \"));\n};\n\n_s(RepositoryList, \"kj9kldCwsQH8p1JsxcvTn5OK/5g=\", false, function () {\n  return [useStrings];\n});\n\n_c = RepositoryList;\nexport default RepositoryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepositoryList\");","map":{"version":3,"sources":["C:/Users/imachado/Desktop/Develop/projects/uolDesafio/src/components/RepositoryList/index.tsx"],"names":["useStrings","styles","RepositoryList","props","list","listTitle","strings","repositoryList","components","container","container__title","length","map","_repository","index","html_url","name","notFounded"],"mappings":";;;;;;AAAA;AACA,OAAOA,UAAP,MAAuB,wBAAvB,C,CACA;;AAEA;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAgC;AAAA;;AAAA,MAC7CC,IAD6C,GACzBD,KADyB,CAC7CC,IAD6C;AAAA,MACvCC,SADuC,GACzBF,KADyB,CACvCE,SADuC;;AAAA,oBAEjCL,UAAU,EAFuB;AAAA,MAE7CM,OAF6C,eAE7CA,OAF6C;;AAAA,MAG7CC,cAH6C,GAG1BD,OAAO,CAACE,UAHkB,CAG7CD,cAH6C;AAKrD,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACQ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAER,MAAM,CAACS,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCL,SAAxC,CADF,EAEGD,IAAI,CAACO,MAAL,GAAc,CAAd,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACQ,GAAL,CAAS,UAACC,WAAD,EAAcC,KAAd,EAAwB;AAChC,WACE;AACE,MAAA,GAAG,sBAAeA,KAAf,CADL;AAEE,MAAA,IAAI,EAAED,WAAW,CAACE,QAFpB;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,GAAG,EAAC,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,WAAW,CAACG,IAAjB,CANF,CADF;AAUD,GAXA,CADH,CADD,GAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,cAAc,CAACU,UAAnB,MAlBJ,CADF;AAuBD,CA5BD;;GAAMf,c;UAEgBF,U;;;KAFhBE,c;AA8BN,eAAeA,cAAf","sourcesContent":["// MARK: Hooks\r\nimport useStrings from '@core/hooks/useStrings';\r\n// MARK: Interfaces\r\nimport { RepositoryListProps } from './interface';\r\n// MARK: Styles\r\nimport styles from './styles.module.scss';\r\n\r\nconst RepositoryList = (props: RepositoryListProps) => {\r\n  const { list, listTitle } = props;\r\n  const { strings } = useStrings();\r\n  const { repositoryList } = strings.components;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.container__title}>{listTitle}</p>\r\n      {list.length > 0 ? (\r\n        <ul>\r\n          {list.map((_repository, index) => {\r\n            return (\r\n              <a\r\n                key={`repository${index}`}\r\n                href={_repository.html_url}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <li>{_repository.name}</li>\r\n              </a>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p>{repositoryList.notFounded} </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepositoryList;\r\n"]},"metadata":{},"sourceType":"module"}