{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\imachado\\\\Desktop\\\\next-boilerplate\\\\src\\\\components\\\\UserCard\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RepositoryList from '../RepositoryList';\nimport { onStarredClicked, onReposClicked } from './helpers';\nimport styles from './styles.module.scss';\n\nvar UserCard = function UserCard(props) {\n  _s();\n\n  var user = props.user,\n      repositories = props.repositories,\n      isLoading = props.isLoading,\n      handleRepos = props.handleRepos,\n      handleStarred = props.handleStarred;\n\n  var _useState = useState(''),\n      listTitle = _useState[0],\n      setListTitle = _useState[1];\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.container__row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: user.avatar_url,\n    alt: \"Avatar\",\n    className: styles.container__image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    className: styles.container__loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, user.login)), __jsx(\"div\", {\n    className: styles.container__row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles.container__infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Reposit\\xF3rios p\\xFAblicos: \", user.public_repos), __jsx(\"p\", {\n    className: styles.container__infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Seguidores: \", user.followers)), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: styles.container__button,\n    onClick: function onClick() {\n      return onReposClicked(handleRepos, setListTitle);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Repos\"), __jsx(\"button\", {\n    type: \"button\",\n    className: styles.container__button,\n    onClick: function onClick() {\n      return onStarredClicked(handleStarred, handleRepos);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Starred\"))), __jsx(\"div\", {\n    className: styles.container__listBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, isLoading ? __jsx(CircularProgress, {\n    size: 35,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }) : repositories && __jsx(RepositoryList, {\n    list: repositories,\n    listTitle: listTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })));\n};\n\n_s(UserCard, \"z0cMR5zknU61JZcmSNo3/aHDSho=\");\n\n_c = UserCard;\nexport default UserCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCard\");","map":{"version":3,"sources":["C:/Users/imachado/Desktop/next-boilerplate/src/components/UserCard/index.tsx"],"names":["useState","CircularProgress","RepositoryList","onStarredClicked","onReposClicked","styles","UserCard","props","user","repositories","isLoading","handleRepos","handleStarred","listTitle","setListTitle","container","container__row","avatar_url","container__image","container__loginText","login","container__infoText","public_repos","followers","container__button","container__listBox"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport RepositoryList from '../RepositoryList';\r\nimport { onStarredClicked, onReposClicked } from './helpers';\r\nimport { UserCardProps } from './interface';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst UserCard = (props: UserCardProps) => {\r\n  const { user, repositories, isLoading, handleRepos, handleStarred } = props;\r\n  const [listTitle, setListTitle] = useState<string>('');\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.container__row}>\r\n        <img\r\n          src={user.avatar_url}\r\n          alt=\"Avatar\"\r\n          className={styles.container__image}\r\n        />\r\n        <p className={styles.container__loginText}>{user.login}</p>\r\n      </div>\r\n      <div className={styles.container__row}>\r\n        <div>\r\n          <p className={styles.container__infoText}>\r\n            Repositórios públicos: {user.public_repos}\r\n          </p>\r\n          <p className={styles.container__infoText}>\r\n            Seguidores: {user.followers}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.container__button}\r\n            onClick={() => onReposClicked(handleRepos, setListTitle)}\r\n          >\r\n            Repos\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.container__button}\r\n            onClick={() => onStarredClicked(handleStarred, handleRepos)}\r\n          >\r\n            Starred\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.container__listBox}>\r\n        {isLoading ? (\r\n          <CircularProgress size={35} />\r\n        ) : (\r\n          repositories && (\r\n            <RepositoryList list={repositories} listTitle={listTitle} />\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n"]},"metadata":{},"sourceType":"module"}