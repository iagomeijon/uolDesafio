{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/imachado/Desktop/Develop/projects/uolDesafio/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/imachado/Desktop/Develop/projects/uolDesafio/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nexport default function useGitHub() {\n  _s();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(null),\n      repositories = _useState2[0],\n      setRepositories = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasUserNotFound = _useState3[0],\n      setHasUserNotFound = _useState3[1];\n\n  var _useState4 = useState(false),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLoadingSearch = _useState5[0],\n      setIsLoadingSearch = _useState5[1];\n\n  function clean() {\n    setHasUserNotFound(false);\n    setIsLoading(false);\n    setIsLoadingSearch(false);\n    setRepositories(null);\n    setUser(null);\n  }\n\n  function getUser(_x) {\n    return _getUser.apply(this, arguments);\n  }\n\n  function _getUser() {\n    _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userSearch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              clean();\n              setIsLoadingSearch(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.get(\"https://api.github.com/users/\".concat(userSearch));\n\n            case 5:\n              res = _context.sent;\n              setUser(res.data);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              setHasUserNotFound(true);\n\n            case 12:\n              _context.prev = 12;\n              setIsLoadingSearch(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9, 12, 15]]);\n    }));\n    return _getUser.apply(this, arguments);\n  }\n\n  function getRepositoriesList() {\n    return _getRepositoriesList.apply(this, arguments);\n  }\n\n  function _getRepositoriesList() {\n    _getRepositoriesList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setRepositories(null);\n              setIsLoading(true);\n\n              if (!user) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return axios.get(\"https://api.github.com/users/\".concat(user.login, \"/repos\"));\n\n            case 6:\n              res = _context2.sent;\n              setRepositories(res.data);\n\n            case 8:\n              _context2.prev = 8;\n              setIsLoading(false);\n              return _context2.finish(8);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3,, 8, 11]]);\n    }));\n    return _getRepositoriesList.apply(this, arguments);\n  }\n\n  function getStarredList() {\n    return _getStarredList.apply(this, arguments);\n  }\n\n  function _getStarredList() {\n    _getStarredList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setRepositories(null);\n              setIsLoading(true);\n\n              if (!user) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.prev = 3;\n              _context3.next = 6;\n              return axios.get(\"https://api.github.com/users/\".concat(user.login, \"/starred\"));\n\n            case 6:\n              res = _context3.sent;\n              setRepositories(res.data);\n\n            case 8:\n              _context3.prev = 8;\n              setIsLoading(false);\n              return _context3.finish(8);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3,, 8, 11]]);\n    }));\n    return _getStarredList.apply(this, arguments);\n  }\n\n  return {\n    state: {\n      isLoading: isLoading,\n      user: user,\n      hasUserNotFound: hasUserNotFound,\n      repositories: repositories,\n      isLoadingSearch: isLoadingSearch\n    },\n    actions: {\n      getUser: getUser,\n      getRepositoriesList: getRepositoriesList,\n      getStarredList: getStarredList,\n      clean: clean\n    }\n  };\n}\n\n_s(useGitHub, \"9oKL+7e6rYdLo3WYAIfPG9paRno=\");","map":{"version":3,"sources":["C:/Users/imachado/Desktop/Develop/projects/uolDesafio/src/core/hooks/useGitHub/index.tsx"],"names":["useState","axios","useGitHub","user","setUser","repositories","setRepositories","hasUserNotFound","setHasUserNotFound","isLoading","setIsLoading","isLoadingSearch","setIsLoadingSearch","clean","getUser","userSearch","get","res","data","getRepositoriesList","login","getStarredList","state","actions"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACVF,QAAQ,CAAc,IAAd,CADE;AAAA,MAC3BG,IAD2B;AAAA,MACrBC,OADqB;;AAAA,mBAEMJ,QAAQ,CAAsB,IAAtB,CAFd;AAAA,MAE3BK,YAF2B;AAAA,MAEbC,eAFa;;AAAA,mBAGYN,QAAQ,CAAU,KAAV,CAHpB;AAAA,MAG3BO,eAH2B;AAAA,MAGVC,kBAHU;;AAAA,mBAIAR,QAAQ,CAAU,KAAV,CAJR;AAAA,MAI3BS,SAJ2B;AAAA,MAIhBC,YAJgB;;AAAA,mBAKYV,QAAQ,CAAU,KAAV,CALpB;AAAA,MAK3BW,eAL2B;AAAA,MAKVC,kBALU;;AAOlC,WAASC,KAAT,GAAuB;AACrBL,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAbiC,WAenBU,OAfmB;AAAA;AAAA;;AAAA;AAAA,wEAelC,iBAAuBC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEF,cAAAA,KAAK;AACLD,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAFF;AAAA;AAAA,qBAIsBX,KAAK,CAACe,GAAN,wCACgBD,UADhB,EAJtB;;AAAA;AAIUE,cAAAA,GAJV;AAOIb,cAAAA,OAAO,CAACa,GAAG,CAACC,IAAL,CAAP;AAPJ;AAAA;;AAAA;AAAA;AAAA;AASIV,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;;AATJ;AAAA;AAWII,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAXJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAfkC;AAAA;AAAA;;AAAA,WA8BnBO,mBA9BmB;AAAA;AAAA;;AAAA;AAAA,oFA8BlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACEb,cAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,cAAAA,YAAY,CAAC,IAAD,CAAZ;;AAFF,mBAGMP,IAHN;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAKwBF,KAAK,CAACe,GAAN,wCACgBb,IAAI,CAACiB,KADrB,YALxB;;AAAA;AAKYH,cAAAA,GALZ;AAQMX,cAAAA,eAAe,CAACW,GAAG,CAACC,IAAL,CAAf;;AARN;AAAA;AAUMR,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAVN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA9BkC;AAAA;AAAA;;AAAA,WA6CnBW,cA7CmB;AAAA;AAAA;;AAAA;AAAA,+EA6ClC;AAAA;AAAA;AAAA;AAAA;AAAA;AACEf,cAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,cAAAA,YAAY,CAAC,IAAD,CAAZ;;AAFF,mBAGMP,IAHN;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAKwBF,KAAK,CAACe,GAAN,wCACgBb,IAAI,CAACiB,KADrB,cALxB;;AAAA;AAKYH,cAAAA,GALZ;AAQMX,cAAAA,eAAe,CAACW,GAAG,CAACC,IAAL,CAAf;;AARN;AAAA;AAUMR,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAVN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7CkC;AAAA;AAAA;;AA4DlC,SAAO;AACLY,IAAAA,KAAK,EAAE;AACLb,MAAAA,SAAS,EAATA,SADK;AAELN,MAAAA,IAAI,EAAJA,IAFK;AAGLI,MAAAA,eAAe,EAAfA,eAHK;AAILF,MAAAA,YAAY,EAAZA,YAJK;AAKLM,MAAAA,eAAe,EAAfA;AALK,KADF;AAQLY,IAAAA,OAAO,EAAE;AACPT,MAAAA,OAAO,EAAPA,OADO;AAEPK,MAAAA,mBAAmB,EAAnBA,mBAFO;AAGPE,MAAAA,cAAc,EAAdA,cAHO;AAIPR,MAAAA,KAAK,EAALA;AAJO;AARJ,GAAP;AAeD;;GA3EuBX,S","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useGitHub() {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [repositories, setRepositories] = useState<Repository[] | null>(null);\r\n  const [hasUserNotFound, setHasUserNotFound] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [isLoadingSearch, setIsLoadingSearch] = useState<boolean>(false);\r\n\r\n  function clean(): void {\r\n    setHasUserNotFound(false);\r\n    setIsLoading(false);\r\n    setIsLoadingSearch(false);\r\n    setRepositories(null);\r\n    setUser(null);\r\n  }\r\n\r\n  async function getUser(userSearch: string): Promise<void> {\r\n    clean();\r\n    setIsLoadingSearch(true);\r\n    try {\r\n      const res = await axios.get<User>(\r\n        `https://api.github.com/users/${userSearch}`,\r\n      );\r\n      setUser(res.data);\r\n    } catch (err) {\r\n      setHasUserNotFound(true);\r\n    } finally {\r\n      setIsLoadingSearch(false);\r\n    }\r\n  }\r\n\r\n  async function getRepositoriesList(): Promise<void> {\r\n    setRepositories(null);\r\n    setIsLoading(true);\r\n    if (user) {\r\n      try {\r\n        const res = await axios.get(\r\n          `https://api.github.com/users/${user.login}/repos`,\r\n        );\r\n        setRepositories(res.data);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getStarredList(): Promise<void> {\r\n    setRepositories(null);\r\n    setIsLoading(true);\r\n    if (user) {\r\n      try {\r\n        const res = await axios.get(\r\n          `https://api.github.com/users/${user.login}/starred`,\r\n        );\r\n        setRepositories(res.data);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    state: {\r\n      isLoading,\r\n      user,\r\n      hasUserNotFound,\r\n      repositories,\r\n      isLoadingSearch,\r\n    },\r\n    actions: {\r\n      getUser,\r\n      getRepositoriesList,\r\n      getStarredList,\r\n      clean,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}